apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "generic.fullname" . }}
  labels:
    {{- include "generic.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  strategy: {{ .Values.dpeloymentStrategy }}
  selector:
    matchLabels:
      {{- include "generic.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "generic.selectorLabels" . | nindent 8 }}
    spec:
      {{- if or (.Values.pvc.enabled) (gt (len .Values.volumes) 0) }}
      volumes:
        - name: persistence
          persistentVolumeClaim:
            claimName: {{ include "generic.fullname" . }}
        {{- .Values.volumes | toYaml | nindent 8 }}
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "generic.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.probes.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.timeoutSeconds }}
            successThreshold: {{ .Values.probes.successThreshold }}
            failureThreshold: {{ .Values.probes.failureThreshold }}
          readinessProbe:
            httpGet:
              path: /
              port: http
            initialDelaySeconds: {{ .Values.probes.initialDelaySeconds }}
            periodSeconds: {{ .Values.probes.periodSeconds }}
            timeoutSeconds: {{ .Values.probes.timeoutSeconds }}
            successThreshold: {{ .Values.probes.successThreshold }}
            failureThreshold: {{ .Values.probes.failureThreshold }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if or (.Values.pvc.enabled) (gt (len .Values.volumeMounts) 0) }}
          volumeMounts:
            - mountPath: {{ .Values.pvc.mountPath }}
              name: persistence
            {{- .Values.volumeMounts | toYaml | nindent 12 }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ include "generic.fullname" . }}
            # TODO: add conditional 1password secret ref
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
